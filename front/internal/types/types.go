// Code generated by goctl. DO NOT EDIT.
package types

type IDReq struct {
	ID uint `json:"id"`
}

type IDPathReq struct {
	ID uint `path:"id"`
}

type PageReq struct {
	Page     int `form:"page,default=1"`
	PageSize int `form:"page_size,default=15"`
}

type PageListReply struct {
	Total    uint        `json:"total"`
	Page     int         `json:"page"`
	PageSize int         `json:"page_size"`
	LastPage int         `json:"last_page"`
	List     interface{} `json:"list"`
}

type SimpleList struct {
	List interface{} `json:"list"`
}

type LoginReq struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type LoginReply struct {
	Token string `json:"token"`
}

type RegisterReq struct {
	Mobile   string `json:"mobile"`       // 手机号
	Password string `json:"password"`     // 密码
	Code     string `json:"code"`         // 手机号验证码
	Ref      string `json:"ref,optional"` // 推荐人手机号
}

type RegisterReply struct {
	ID   uint   `json:"id"`
	Name string `json:"name"`
}

type GetMobileCodeReq struct {
	Mobile string `json:"mobile"` // 手机号
}

type GetMobileCodeReply struct {
	Mobile string `json:"mobile"` // 手机号
	Code   string `json:"code"`   //
}

type ResetPasswordReq struct {
	UserName        string `json:"username"`         //手机号
	Password        string `json:"password"`         //密码
	Code            string `json:"code"`             //手机号验证码
	ConfirmPassword string `json:"confirm_password"` //重复密码
}

type ResetPasswordReply struct {
	UserName string `json:"username"` //手机号
}

type Auth2qqReq struct {
	Code string `json:"code"`
}

type Auth2wechatReq struct {
	Code string `json:"code"`
}

type Auth2appleReq struct {
	User     string `json:"user"`
	Email    string `json:"email"`
	FullName string `json:"full_name"`
}

type Auth2qqReply struct {
	IsRegister  bool   `json:"is_register"`
	Token       string `json:"token"`
	SocialsType string `json:"socials_type"`
	Unionid     string `json:"unionid"`
	Openid      string `json:"openid"`
	Avatar      string `json:"avatar"`
	Nickname    string `json:"user"`
	Sex         uint   `json:"sex"`
}

type Auth2wechatReply struct {
	IsRegister  bool   `json:"is_register"`
	Token       string `json:"token"`
	SocialsType string `json:"socials_type"`
	Unionid     string `json:"unionid"`
	Openid      string `json:"openid"`
	Avatar      string `json:"avatar"`
	Nickname    string `json:"user"`
	Sex         uint   `json:"sex"`
}

type Auth2appleReply struct {
	IsRegister  bool   `json:"is_register"`
	Token       string `json:"token"`
	SocialsType string `json:"socials_type"`
	User        string `json:"user"`
	Email       string `json:"email"`
	FullName    string `json:"full_name"`
}

type Auth2mobileBindReq struct {
	Mobile      string `json:"mobile"`
	Code        string `json:"code"`
	SocialsType string `json:"socials_type"`
	Openid      string `json:"openid"`
	Unionid     string `json:"unionid"`
	NickName    string `json:"nick_name,optional"`
	Avatar      string `json:"avatar,optional"`
	Sex         uint   `json:"sex,optional"`
	Email       string `json:"email,optional"`
}

type Auth2mobileBindReply struct {
	Token string `json:"token"`
}

type OfficialAsk struct {
	ID        uint   `json:"id"`
	Question  string `json:"question"`
	Answer    string `json:"answer"`
	CreatedAt string `json:"created_at"`
}

type UserAsk struct {
	ID        uint      `json:"id"`
	ParentID  uint      `json:"parent_id"`
	Question  string    `json:"question"`
	IsReply   uint      `json:"is_reply"`
	Answer    string    `json:"answer"`
	CreatedAt string    `json:"created_at"`
	Child     []UserAsk `gorm:"foreignKey:ParentID" json:"child"`
}

type UserAskPostReq struct {
	ParentID uint   `json:"parent_id"`
	Question string `json:"question"`
}

type UserAskEndReq struct {
	ID uint `json:"id"`
}

type Article struct {
	ID          int             `json:"id"`
	CategoryID  int             `json:"category_id"`
	Title       string          `json:"title"`
	Author      string          `json:"author"`
	UID         int             `json:"uid"`
	Sort        int             `json:"sort"`
	Thumb       string          `json:"thumb"`
	Description string          `json:"description"`
	Content     string          `json:"content"`
	Status      int             `json:"status"`
	IsRecommend int             `json:"is_recommend"`
	CreateTime  string          `json:"create_time"`
	Category    ArticleCategory `json:"category"`
}

type ArticleCategory struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
}

type CategoryArticlesReq struct {
	Page       int `form:"page,optional"`
	PageSize   int `form:"page_size,optional"`
	CategoryID int `form:"category_id,optional"`
}
